Given numRows, generate the first numRows of Pascal's triangle.

For example, given numRows = 5,
Return

[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

class Solution {
public:
    vector<vector<int>> generate(int numRows)
    {
        vector<vector<int>> result;
        
        if( numRows == 0 )
            return result;
            
        vector<int> current;
            
        if( numRows >= 1 )
        {
            current.push_back(1);
            result.push_back( current );
            current.clear();
        }
        
        if( numRows >= 2 )
        {
            current.push_back(1);
            current.push_back(1);
            result.push_back( current );
            current.clear();
        }
        
        vector<int> previous;
        
        while( numRows > 2 )
        {
            previous = result.back( );
            
            // Push 1st element.
            current.push_back( previous[0] );
            
            int i = 0;
            while( i < ( previous.size() - 1 ) )
            {
                current.push_back( previous[i] + previous[i + 1] );
                i++;
            }
            
            // Push last element.
            current.push_back( previous[ previous.size() - 1 ] );
            
            result.push_back( current );
            current.clear();
            previous.clear();
            
            numRows--;
        }
        
        return result;
    }
};
