Given a binary tree, flatten it to a linked list in-place.

For example,
Given

         1
        / \
       2   5
      / \   \
     3   4   6
The flattened tree should look like:
   1
    \
     2
      \
       3
        \
         4
          \
           5
            \
             6


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

void ConvertBTToLL( struct TreeNode **root )
{
    if( !(*root) )
        return;
        
    struct TreeNode *left  = (*root)->left;
    struct TreeNode *right = (*root)->right;
    
    (*root)->left  = NULL;
    (*root)->right = NULL;
    
    ConvertBTToLL( &left  );
    ConvertBTToLL( &right );
    
    if( left )
    {
        struct TreeNode *temp = *root;
        (*root)->right = left;
        temp = (*root)->right;
        
        while( temp->right )
            temp = temp->right;
            
        temp->right = right;
        return;
    }
    else
    {
        (*root)->right = right;
    }

#if 0    
    if( left )
    {
        (*root)->right = left;
        
        if( (*root)->right )
            (*root)->right->right = right;
    }
    
    if( right )
    {
        (*root)->right = right;
    }
#endif    
}

void flatten(struct TreeNode* root)
{
    if( !root )
        return;
        
    ConvertBTToLL( &root );
}
