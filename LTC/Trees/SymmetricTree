Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).

For example, this binary tree is symmetric:

    1
   / \
  2   2
 / \ / \
3  4 4  3
But the following is not:
    1
   / \
  2   2
   \   \
   3    3


/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
  * };
 */
 
bool isSymmetricc( struct TreeNode *left, struct TreeNode *right)
{
    if( !left && !right )
    {
        return true;
    }
    else if( !left || !right )
    {
        return false;
    }
    else
    {
    return  ( left->val == right->val ) && isSymmetricc ( left->left, right->right ) && isSymmetricc( left->right, right->left );
    }
}

bool isSymmetric(struct TreeNode *root) 
{
    if( !root )
    {
        return true;
    }
    else
    {
        return isSymmetricc( root->left, root->right );
    }
}
