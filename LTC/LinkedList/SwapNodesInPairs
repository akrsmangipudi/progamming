Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 
 void PairWiseSwap( struct ListNode **head )
 {
     if( !(*head) )
        return;
        
    struct ListNode *one = *head;
    
    struct ListNode *two = (*head)->next;
    
    if( !two )
        return;
        
    PairWiseSwap( &(two->next) );
    
    one->next = two->next;
    two->next = one;
    
    (*head) = two;
 }
 
struct ListNode* swapPairs(struct ListNode* head)
{
    PairWiseSwap( &head );
    
    return head;
}
