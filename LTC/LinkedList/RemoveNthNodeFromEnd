Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Try to do this in one pass.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* removeNthFromEnd(struct ListNode* head, int n)
{
    if( !head )
        return head;
    
    int count = 1;
    
    struct ListNode* one  = head;
    
    while( count < n )
    {
        one = one->next;
        count++;
    }
    
    struct ListNode* prev = NULL;
    struct ListNode* two  = head;
    
    while( one->next )
    {
        one  = one->next;
        prev = two;
        two  = two->next;
    }
    
    if( prev == NULL ) // Request is to delete the head node.
    {
        head = two->next;
        free(two);
        return head;
    }
    
    if( prev->next )
    {
        prev->next = two->next;
        free(two);
        return head;
    }
}
